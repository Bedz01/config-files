user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
  worker_connections 768;
}

http {

  # --------------------------------------------------------------------
  # Basic Settings
  # --------------------------------------------------------------------

  # Speed up file transfers by using sendfile() to copy directly between
  # descriptors rather than using read()/write().
  sendfile on;

  # Don't send out partial frames; this increases throughput since TCP frames
  # are filled up before being sent out.
  tcp_nopush on;

  tcp_nodelay on;

  # How long to allow each connection to stay idle.
  # Longer values are better for each individual client, particularly for SSL,
  # but means that worker connections are tied up longer.
  keepalive_timeout 65;

  types_hash_max_size 2048;

  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  charset utf-8;


  # --------------------------------------------------------------------
  # SSL Settings
  # --------------------------------------------------------------------

  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_prefer_server_ciphers on;
  ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';

  ssl_dhparam /etc/ssl/certs/dhparam.pem;

  # Cache SSL sessions for 10m (this is about 40,000 sessions), timing them out after 24 hours.
  ssl_session_cache shared:SSL:10m;
  ssl_session_timeout 24h;

  ssl_stapling on;
  ssl_stapling_verify on;
  resolver 8.8.4.4 8.8.8.8 valid=300s;
  resolver_timeout 10s;


  # --------------------------------------------------------------------
  # Logging Settings
  # --------------------------------------------------------------------

  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log;


  # --------------------------------------------------------------------
  # Gzip Settings
  # --------------------------------------------------------------------

  gzip on;
  gzip_disable "msie6";

  gzip_vary on;
  gzip_proxied any;
  gzip_comp_level 6;
  gzip_buffers 16 8k;
  gzip_http_version 1.1;
  gzip_min_length 256;

  # Compress all output labeled with one of the following MIME-types.
  # text/html is always compressed by gzip module.
  gzip_types
    application/atom+xml
    application/javascript
    application/json
    application/ld+json
    application/manifest+json
    application/rss+xml
    application/vnd.geo+json
    application/vnd.ms-fontobject
    application/x-font-ttf
    application/x-web-app-manifest+json
    application/xhtml+xml
    application/xml
    font/opentype
    image/bmp
    image/svg+xml
    image/x-icon
    text/cache-manifest
    text/css
    text/javascript
    text/plain
    text/vcard
    text/vnd.rim.location.xloc
    text/vtt
    text/xml
    text/x-component
    text/x-cross-domain-policy;


  # --------------------------------------------------------------------
  # Security Settings
  # --------------------------------------------------------------------

  # Hide server signature
  server_tokens off;
  more_clear_headers Server;

  # Don't send referrer when navigating from HTTPS to HTTP
  more_set_headers "Referrer-Policy: no-referrer-when-downgrade";

  # Do not allow this site to be displayed in iframes
  more_set_headers "X-Frame-Options: DENY";

  # Do not permit Content-Type sniffing.
  more_set_headers "X-Content-Type-Options: nosniff";

  # The X-XSS-Protection header is used by Internet Explorer version 8+
  # The header instructs IE to enable its inbuilt anti-cross-site scripting filter.
  more_set_headers "X-XSS-Protection: 1; mode=block";

  # Connect over HTTPS, even if the scheme chosen was HTTP
  more_set_headers "Strict-Transport-Security: max-age=63072000";

  # --------------------------------------------------------------------
  # Cache Settings
  # --------------------------------------------------------------------

  # This tells Nginx to cache open file handles, "not found" errors, metadata about files and their permissions, etc.
  #
  # The upside of this is that Nginx can immediately begin sending data when a popular file is requested,
  # and will also know to immediately send a 404 if a file is missing on disk, and so on.
  #
  # However, it also means that the server won't react immediately to changes on disk, which may be undesirable.
  #
  # In the below configuration, inactive files are released from the cache after 20 seconds, whereas
  # active (recently requested) files are re-validated every 30 seconds.
  #
  # Descriptors will not be cached unless they are used at least 2 times within 20 seconds (the inactive time).
  #
  # A maximum of the 1000 most recently used file descriptors can be cached at any time.
  #
  # Production servers with stable file collections will definitely want to enable the cache.
  open_file_cache          max=1000 inactive=20s;
  open_file_cache_valid    30s;
  open_file_cache_min_uses 2;
  open_file_cache_errors   on;


  # --------------------------------------------------------------------
  # Virtual Host Configs
  # --------------------------------------------------------------------

  include /etc/nginx/conf.d/*.conf;
  include /etc/nginx/sites-enabled/*;

}
