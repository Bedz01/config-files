[core]
  # Use Notepad++ as default editor
  editor = "'C:/Program Files (x86)/Notepad++/Notepad++.exe' -multiInst -notabbar -nosession -noPlugin"

[diff]
  # Default diff tool
  tool = p4merge

[difftool "p4merge"]
  # Path to p4merge.exe (cmd is deprecated)
  path = C:/Program Files/Perforce/p4merge.exe

[log]
  # Print out ref names on commits by default
  decorate = short

[merge]
  # Default merge tool
  tool = p4merge

[mergetool "p4merge"]
  # Path to p4merge.exe (cmd is deprecated)
  path = C:/Program Files/Perforce/p4merge.exe

[pretty]
  # Custom log format and colors
  custom = "%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %Cblue<%an>%Creset"

[push]
  # Push mode for centralized workflows
  default = simple

[rebase]
  # Automatically stash/unstash the working directory before/after rebases
  autostash = true


[alias]
  # Log
  lg = log --graph --pretty=custom --abbrev-commit --date=relative --all
  q = log --graph --pretty=custom --abbrev-commit --date=relative --all -25
  qq = log --graph --pretty=custom --abbrev-commit --date=relative --all -25 --first-parent master
  last = log -1 --stat

  # Branch
  cm = checkout master

  # Push
  pom = push origin master

  # View the current working tree status using the short format
  s = status -s

  # Switch to a branch, creating it if necessary
  go = "!f() { git checkout -b \"$1\" 2> /dev/null || git checkout \"$1\"; }; f"

  # Show verbose output about tags, branches or remotes
  tags = tag -l
  branches = branch -a
  remotes = remote -v

  # Amend the currently staged files to the latest commit
  amend = commit --amend --reuse-message=HEAD

  # Find branches containing commit
  fb = "!f() { git branch -a --contains $1; }; f"

  # Find commits by commit message
  fm = "!f() { git log --pretty=format:'%C(yellow)%h  %Cblue%ad  %Creset%s%Cgreen  [%cn] %Cred%d' --decorate --date=short --grep=$1; }; f"

  # List contributors with number of commits
  contributors = shortlog --summary --numbered